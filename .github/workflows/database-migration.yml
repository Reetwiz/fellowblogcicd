name: Manual Database Migration

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Which backend service to target?'
        required: true
        type: choice
        options:
          - backend1
          - backend2
      action:
        description: 'What action to perform?'
        required: true
        type: choice
        options:
          - migrate
          - rollback

jobs:
  run-db-migration:
    name: Run DB Migration for ${{ github.event.inputs.service }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Execute Migration/Rollback on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            if [ "${{ github.event.inputs.service }}" = "backend1" ]; then
              CONTAINER_NAME="fellowship-backend1"
            elif [ "${{ github.event.inputs.service }}" = "backend2" ]; then
              CONTAINER_NAME="fellowship-backend2"
            else
              echo "Invalid service name provided."
              exit 1
            fi
            
            echo "Targeting container: $CONTAINER_NAME"
            echo "Executing action: ${{ github.event.inputs.action }}"
            
            if [ "${{ github.event.inputs.action }}" = "migrate" ]; then
              docker exec $CONTAINER_NAME yarn knex migrate:latest
            elif [ "${{ github.event.inputs.action }}" = "rollback" ]; then
              docker exec $CONTAINER_NAME yarn knex migrate:rollback
            else
              echo "Invalid action provided."
              exit 1
            fi
            
            echo "Command executed successfully."