name: Docker Build, Push, and Release

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  packages: write

jobs:
  prepare:
    name: Prepare Version
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      version: ${{ steps.changelog.outputs.version }}
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Conventional Changelog Action
        if: github.ref_name == 'main'
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          preset: "conventionalcommits"
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    name: Build & Push ${{ matrix.service }}
    needs: prepare
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    strategy:
      matrix:
        include:
          - service: backend1
            context: ./backend1
          - service: backend2
            context: ./backend2
          - service: frontend
            context: ./frontend
    if: github.ref_name == 'dev' || (github.ref_name == 'main' && needs.prepare.outputs.skipped == 'false')
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      # It's best practice to include QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}-${{ matrix.service }}
          tags: |
            type=sha,prefix=dev-,format=short,enable=${{ github.ref_name == 'dev' }}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=semver,pattern={{version}},value=${{ needs.prepare.outputs.version }},enable=${{ github.ref_name == 'main' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.prepare.outputs.version }},enable=${{ github.ref_name == 'main' }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ${{ matrix.service == 'frontend' && format('VITE_CLERK_PUBLISHABLE_KEY={0}', secrets.VITE_CLERK_PUBLISHABLE_KEY) || '' }}
            ${{ matrix.service == 'frontend' && format('VITE_BACKEND1_BASE_URL={0}', vars.VITE_BACKEND1_BASE_URL) || '' }}
            ${{ matrix.service == 'frontend' && format('VITE_BACKEND2_BASE_URL={0}', vars.VITE_BACKEND2_BASE_URL) || '' }}
          # Load cache from previous runs
          cache-from: type=gha
          # Export cache for future runs
          cache-to: type=gha,mode=max

  release:
    name: Create GitHub Release
    needs: [prepare, build-and-push]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && needs.prepare.outputs.skipped == 'false'
    steps:
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          name: ${{ needs.prepare.outputs.tag }}
          body: ${{ needs.prepare.outputs.clean_changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
